// 2022/08/30 12:22:39 (c) Aleksandr Shevchenko e-mail : Sasha7b9@tut.by
#pragma once


namespace FPGA
{
    namespace Register
    {
        // Регистры ПЛИС
        enum E
        {
            _0_Control,
            _1_Freq,
            _2_Amplitude,
            _3_RectA,   // \brief Регистр кода сигнала прямоугольной формы канала А. Используется для установки двух кодов. 1-й код опреде-
                        // ляет нижнее значение прямоугольного сигнала - смещение. 2-й код устанавливает верхнее значение сигнала - как бы
                        // амплитуду.
                        // b0...b13 - нижнее значение, b14...b27 - верхнее значение
            _4_RectB,                           // Аналог _3_RectA для канала B
            _5_PerImp_Freq_A_PerPack,           // Период импульсов, период пакета импульсов, частота канала А
            _6_DurImp_A_NumbImp,                // Длительность импульсов, число ипульсов в пакете канала А
            _7_PerImp_Freq_B_DelayStartStop,    // Период импульсов канала В. В режиме СтартА-СтопВ - задержка между первым и вторым каналом. В пакетном режиме - период импульса
            _8_DurImp_B,                        // Длительность импульсов канала В либо длительность импульса в пакетном режиме
            _9_FreqMeter,
            _10_Offset,
            _11_Start,
            Count
        };
        // Записать значение в регистр. Для значений импульсных регистров записываеются два значения :
        // value - для тактовой частоты 100МГц и value1MHZ - для тактовой частоты 1МГц
        void Write(const E, const uint64 value, const uint64 value1MHz = 0);

        uint64 Read(const E);

        // Переписать импульсные регистры для текущей опорной частоты
        void RewriteImpulseRegisters();
    };

    namespace RG0
    {
        enum E
        {
            /*
            *  RG0.10 | RG0.11 | RG0.12 |
            * --------+--------+--------+-----------------------------------------
            *    1    |   1    |   0    | Автоматический режим запуска Start/Stop
            *    1    |   1    |   1    | Ручной режм запуска Start/Stop
            * --------+--------+--------+----------------------------------------
            */
            _0_WriteData,               // В этот бит записываем 0, перед загрузкой данных сигнала в ПЛИС
            _1_ImpulseA,                // 1, если в канале А ПЛИС формирует импульсы/прямоугольник
            _2_ImpulseB,                // 1, если в канале B ПЛИС формирует импульсы/прямоугольник
            _3_ManipulationOSK2,        // Здесь 0, если синус канала 1 должен манипулироваться сигналом OSK2 ("пилой" от AD9952 второго канала)
            _4_ClockImpulse,            // Тактовая частота для импульсов : 0 - 100МГц (такты 10 нс), 1 - 1МГц (такты 1 мкс)
            _5_ManipulationOSK1,        // Здесь 0, если синус канала 2 должен манипулироваться сигналом OSK1 ("пилой" от AD9952 первого канала)
            _del_6_ManipulationFPGA2,   // Здесь 0, есил синус канала 2 должен манипулироваться формирователем импульсов канала 2
            _7_ClockAD9952,             // 0 - тактовая частота 100 МГц, 1 - тактовая частота 1 МГц
            _8_MeanderA,                // 1, если меандр по каналу A
            _9_MeanderB,                // 1, если меандр по каналу B
            _10_HandStartA,             // Если бит установлен в 1, то ручной запуск канала А
            _11_HandStartB,             // Если бит установлен в 1, то ручной запуск канала В
            _12_PacketImpulse,          // 1, если включён пакетный режим импульсов
            _13_StartMode0,             // Младший бит управления режимом запуска
            _14_StartMode1              // Старший бит управления режимом запуска
        };
    };
}
